@model IEnumerable<webBanThucPham.Models.Cartitem>
@using System.Globalization

@{
    ViewData["Title"] = "Giỏ hàng của bạn";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var culture = new CultureInfo("vi-VN");
    var itemList = Model.ToList();
}

<div class="container py-4">
    <h2 class="mb-4">Giỏ hàng của bạn</h2>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    @if (!itemList.Any())
    {
        <div class="alert alert-info">Giỏ hàng hiện đang trống.</div>
    }
    else
    {
        <form asp-action="CheckoutView" method="get">
            <div class="table-responsive">
                <table class="table table-bordered align-middle text-center" id="cartTable">
                    <thead class="table-light">
                        <tr>
                            <th>Chọn</th>
                            <th>Hình ảnh</th>
                            <th>Tên sản phẩm</th>
                            <th>Giá</th>
                            <th>Giảm giá</th>
                            <th>Số lượng</th>
                            <th>Thành tiền</th>
                            <th>Xóa</th>
                        </tr>
                    </thead>
                    <tbody id="cartItemsBody">
                        @for (int i = 0; i < itemList.Count; i++)
                        {
                            var item = itemList[i];
                            var product = item.Product;
                            var price = product.Price ?? 0;
                            var discount = product.Discount ?? 0;
                            var quantity = item.Quantity;
                            var discountPrice = price - (price * discount / 100);
                            var total = discountPrice * quantity;

                            <tr class="cart-item-row @(i >= 5 ? "d-none" : "")">
                                <td>
                                    <input type="checkbox" name="selectedItems" value="@item.CartItemId" class="form-check-input" />
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", "Product", new { id = item.ProductId })">
                                        <img src="@item.Product.Thumb" alt="@item.Product.ProductName" style="width: 80px;" class="img-thumbnail" />
                                    </a>
                                </td>
                                <td>@product.ProductName</td>
                                <td>@string.Format(culture, "{0:C0}", price)</td>
                                <td>@discount%</td>
                                <td>
                                    <div class="input-group justify-content-center">
                                        <button type="button" class="btn btn-outline-secondary decrease-btn" data-id="@item.CartItemId">-</button>
                                        <input type="text"
                                               class="form-control text-center quantity-input"
                                               value="@item.Quantity"
                                               readonly
                                               style="max-width: 50px;"
                                               data-id="@item.CartItemId"
                                               data-price="@discountPrice"
                                               data-total-cell-id="total-@item.CartItemId" />
                                        <button type="button" class="btn btn-outline-secondary increase-btn" data-id="@item.CartItemId">+</button>
                                    </div>
                                </td>
                                <td id="total-@item.CartItemId">
                                    @string.Format(culture, "{0:C0}", total)
                                </td>
                                <td>
                                    <a class="btn btn-sm btn-danger"
                                       href="@Url.Action("RemoveItem", "Cart", new { id = item.CartItemId })"
                                       onclick="return confirm('Bạn có chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng không?');">
                                        <i class="bi bi-trash-fill"></i> Xóa
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (itemList.Count > 5)
            {
                <div class="text-center my-3">
                    <button type="button" class="btn btn-outline-info" id="loadMoreBtn">Xem thêm</button>
                </div>
            }

            @* Tổng tiền sau giảm giá *@
            @{
                int totalCart = 0;
                foreach (var item in itemList)
                {
                    int discountPrice = item.Price ?? 0;
                    if (item.Product.Discount.HasValue && item.Product.Discount > 0)
                    {
                        discountPrice -= (int)(item.Price * item.Product.Discount / 100);
                    }
                    totalCart += discountPrice * (item.Quantity ?? 0);
                }

            }

            <div class="text-end mt-3">
                <h5>Tổng tiền sau giảm giá: <span class="text-danger" id="totalCartDisplay">@string.Format(culture, "{0:C0}", totalCart)</span></h5>

            </div>

            <div class="d-flex justify-content-between mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-cash-coin"></i> Thanh toán
                </button>
                <a href="@Url.Action("OrderHistory", "CustomAccount")" class="btn btn-outline-secondary">
                    <i class="bi bi-clock-history"></i> Xem lịch sử mua hàng
                </a>
            </div>
        </form>

    }
</div>

@section Scripts {
    <script>
        let shownCount = 5;

        document.getElementById('loadMoreBtn')?.addEventListener('click', function () {
            const rows = document.querySelectorAll('.cart-item-row');
            let revealed = 0;
            for (let i = shownCount; i < rows.length && revealed < 5; i++) {
                rows[i].classList.remove('d-none');
                revealed++;
            }
            shownCount += revealed;

            if (shownCount >= rows.length) {
                this.style.display = 'none';
            }
        });

        // Cập nhật tổng tiền cho một item và tổng toàn bộ giỏ hàng
        function updateTotal(cartItemId, newQuantity) {
            const input = $('.quantity-input[data-id="' + cartItemId + '"]');
            const price = parseFloat(input.data('price'));
            const newTotal = newQuantity * price;
            const formatter = new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });

            const totalCellId = input.data('total-cell-id');
            $('#' + totalCellId).text(formatter.format(newTotal));

            updateTotalCart(); // gọi cập nhật tổng giỏ hàng
        }

        // Cập nhật tổng toàn bộ giỏ hàng sau giảm giá
        function updateTotalCart() {
            let totalCart = 0;
            $('.quantity-input').each(function () {
                const quantity = parseInt($(this).val());
                const price = parseFloat($(this).data('price'));
                totalCart += quantity * price;
            });

            const formatter = new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND'
            });

            $('#totalCartDisplay').text(formatter.format(totalCart));
        }

        // Tăng số lượng
        $('.increase-btn').on('click', function (e) {
            e.preventDefault();
            const cartItemId = $(this).data('id');
            const input = $('.quantity-input[data-id="' + cartItemId + '"]');

            $.post('@Url.Action("IncreaseQuantityAjax", "Cart")', { id: cartItemId }, function (res) {
                if (res.success) {
                    input.val(res.quantity);
                    updateTotal(cartItemId, res.quantity);
                }
            });
        });

        // Giảm số lượng
        $('.decrease-btn').on('click', function (e) {
            e.preventDefault();
            const cartItemId = $(this).data('id');
            const input = $('.quantity-input[data-id="' + cartItemId + '"]');

            $.post('@Url.Action("DecreaseQuantityAjax", "Cart")', { id: cartItemId }, function (res) {
                if (res.success) {
                    input.val(res.quantity);
                    updateTotal(cartItemId, res.quantity);
                }
            });
        });

        // Bắt buộc chọn ít nhất một sản phẩm
        $(document).ready(function () {
            $("form").on("submit", function (e) {
                const checkedItems = $("input[name='selectedItems']:checked");
                if (checkedItems.length === 0) {
                    alert("Vui lòng chọn ít nhất một sản phẩm để thanh toán.");
                    e.preventDefault();
                }
            });

            updateTotalCart(); // tính tổng lần đầu khi page load
        });
    </script>
}


