@{
    ViewData["Title"] = "Đăng nhập";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg">
                <div class="card-body">
                    <h3 class="text-center mb-4">Đăng nhập</h3>

                    <!-- Tab lựa chọn phương thức đăng nhập -->
                    <ul class="nav nav-tabs mb-3" id="loginTab">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#loginPassword">Mật khẩu</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#loginOtp">Mã OTP</a>
                        </li>
                    </ul>

                    <div class="tab-content">
                        <!-- Đăng nhập bằng mật khẩu -->
                        <div class="tab-pane fade show active" id="loginPassword">
                            <form asp-action="Login" method="post">
                                <div class="mb-3">
                                    <label class="form-label">Email</label>
                                    <input type="email" name="email" class="form-control" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Mật khẩu</label>
                                    <input type="password" name="password" class="form-control" required>
                                </div>
                                <button type="submit" class="btn btn-primary w-100">Đăng nhập</button>
                            </form>
                        </div>

                        <!-- Đăng nhập bằng mã OTP -->
                        <div class="tab-pane fade" id="loginOtp">
                            <form id="otpForm">
                                <div class="mb-3">
                                    <label class="form-label">Email</label>
                                    <input type="email" id="otpEmail" class="form-control" required>
                                </div>
                                <button type="button" id="sendOtp" class="btn btn-warning w-100">Gửi mã OTP</button>
                            </form>

                            <form id="verifyOtpForm" class="mt-3 d-none">
                                <div class="mb-3">
                                    <label class="form-label">Nhập mã OTP</label>
                                    <input type="text" id="otpCode" class="form-control" required>
                                </div>
                                <button type="button" id="verifyOtp" class="btn btn-success w-100">Xác nhận</button>
                            </form>
                        </div>
                    </div>

                    <!-- Hiển thị thông báo -->
                    <div id="message" class="alert mt-3 d-none"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const sendBtn = document.getElementById("sendOtp");
    const verifyBtn = document.getElementById("verifyOtp");
    const verifyForm = document.getElementById("verifyOtpForm");
    const messageBox = document.getElementById("message");
    const otpInput = document.getElementById("otpCode");
    const emailInput = document.getElementById("otpEmail");

    let countdownInterval;
    let resendCooldownInterval;

    // Gửi mã OTP
    sendBtn.addEventListener("click", function () {
        let email = emailInput.value;
        if (!email) return alert("Vui lòng nhập email!");

        fetch("/CustomAccount/SendOtp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email: email })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showMessage("success", data.message);
                verifyForm.classList.remove("d-none");
                otpInput.disabled = false;

                startCountdown(300);         // Đếm ngược 5 phút (300 giây)
                startResendCooldown(60);     // 60s mới được gửi lại mã
            } else {
                showMessage("danger", data.message);
            }
        });
    });

    // Xác nhận mã OTP
    verifyBtn.addEventListener("click", function () {
        let email = emailInput.value;
        let otp = otpInput.value;

        if (!otp) return alert("Vui lòng nhập mã OTP!");

        fetch("/CustomAccount/VerifyOtp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ email: email, otp: otp })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                showMessage("success", data.message);
                clearInterval(countdownInterval);
                setTimeout(() => window.location.href = "/Home/Index", 2000);
            } else {
                showMessage("danger", data.message);
            }
        });
    });

    // Hiển thị thông báo
    function showMessage(type, text) {
        messageBox.className = `alert alert-${type}`;
        messageBox.innerText = text;
        messageBox.classList.remove("d-none");
    }

    // Bắt đầu đếm ngược hiệu lực mã OTP (5 phút)
    function startCountdown(seconds) {
        clearInterval(countdownInterval);
        countdownInterval = setInterval(() => {
            seconds--;
            let min = Math.floor(seconds / 60);
            let sec = seconds % 60;
            otpInput.placeholder = `Mã hết hạn sau ${min}:${sec.toString().padStart(2, '0')}`;
            if (seconds <= 0) {
                clearInterval(countdownInterval);
                otpInput.disabled = true;
                showMessage("danger", "Mã OTP đã hết hạn. Vui lòng gửi lại mã mới.");
            }
        }, 1000);
    }

    // Chặn spam gửi mã (cooldown 60s)
    function startResendCooldown(seconds) {
        sendBtn.disabled = true;
        let originalText = sendBtn.textContent;

        resendCooldownInterval = setInterval(() => {
            sendBtn.textContent = `Gửi lại (${seconds}s)`;
            seconds--;

            if (seconds < 0) {
                clearInterval(resendCooldownInterval);
                sendBtn.disabled = false;
                sendBtn.textContent = originalText;
            }
        }, 1000);
    }
</script>

