@model X.PagedList.IPagedList<webBanThucPham.Models.Product>
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h1>Danh sách sản phẩm</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Thêm sản phẩm mới</a>
</p>

<!-- Form tìm kiếm -->
<form method="get" id="searchForm">
    <div class="row mb-3">
        <div class="col-md-3">
            <input type="text" name="searchName" value="@Context.Request.Query["searchName"]" class="form-control" placeholder="Tìm theo tên sản phẩm...">
        </div>
        <div class="col-md-3">
            <select name="searchCategory" class="form-control">
                <option value="">Chọn danh mục</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category.CatName" selected="@(category.CatName == Context.Request.Query["searchCategory"])">@category.CatName</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <select name="searchStatus" class="form-control">
                <option value="">Tất cả trạng thái</option>
                <option value="true" selected="@(Context.Request.Query["searchStatus"] == "true")">Đang bán</option>
                <option value="false" selected="@(Context.Request.Query["searchStatus"] == "false")">Ngừng bán</option>
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-success">Tìm kiếm</button>
        </div>
    </div>
</form>

<!-- Bảng danh sách sản phẩm -->
<table class="table table-striped table-bordered">
    <thead class="table-dark">
        <tr>
            <th>Hình ảnh</th>
            <th>Tên sản phẩm</th>
            <th>Mô tả ngắn</th>
            <th>Giá</th>
            <th>Ngày tạo</th>
            <th>Trạng thái</th>
            <th>Tồn kho</th>
            <th>Danh mục</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src="@(string.IsNullOrEmpty(item.Thumb) ? "/images/default.png" : item.Thumb)" alt="Hình ảnh sản phẩm" class="img-thumbnail" style="width: 100px; height: 100px;">
                </td>
                <td>@Html.DisplayFor(modelItem => item.ProductName)</td>
                <td>@Html.DisplayFor(modelItem => item.ShortDesc)</td>
                <td>@Html.DisplayFor(modelItem => item.Price) VND</td>
                <td>@Html.DisplayFor(modelItem => item.DateCreated)</td>
                <td>
                    @if (item.Active.GetValueOrDefault())
                    {
                        <span class="badge bg-success">Đang bán</span>
                    }
                    else
                    {
                        <span class="badge bg-danger">Ngừng bán</span>
                    }
                </td>
                <td>@Html.DisplayFor(modelItem => item.UnitsInStock)</td>
                <td>@(item.Cat?.CatName ?? "Chưa có danh mục")</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.ProductId" class="btn btn-warning btn-sm">Sửa</a>
                    <a asp-action="Details" asp-route-id="@item.ProductId" class="btn btn-info btn-sm">Chi tiết</a>
                    <button class="btn btn-danger btn-sm btn-delete" data-id="@item.ProductId">Xóa</button>
                </td>
            </tr>
        }
    </tbody>
</table>
@* Phân trang *@
<div class="d-flex justify-content-center mt-3">
    @Html.PagedListPager(Model, page => Url.Action("Index", new
        {
            page,
            searchName = Context.Request.Query["searchName"],
            searchCategory = Context.Request.Query["searchCategory"],
            searchStatus = Context.Request.Query["searchStatus"]
        }),
            new X.PagedList.Web.Common.PagedListRenderOptions
    {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        UlElementClasses = new[] { "pagination", "justify-content-center" }
    })
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".btn-delete").forEach(button => {
            button.addEventListener("click", function () {
                let productId = this.getAttribute("data-id");

                Swal.fire({
                    title: "Bạn có chắc chắn?",
                    text: "Sản phẩm này sẽ bị xóa vĩnh viễn!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Xóa",
                    cancelButtonText: "Hủy"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/Admin/AdminProducts/Delete?id=${productId}`, {
                            method: "POST"
                        })
                        .then(response => response.json())
                        .then(data => {
                            Swal.fire("Xóa thành công!", data.message, "success").then(() => {
                                location.reload();
                            });
                        })
                        .catch(() => Swal.fire("Lỗi!", "Không thể xóa sản phẩm.", "error"));
                    }
                });
            });
        });
    });
</script>